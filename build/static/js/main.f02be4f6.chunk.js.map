{"version":3,"sources":["components/SchemesList.js","components/NavButtons.js","components/SchemeConfiguration.js","components/structures.js","components/SchemeVisualization.js","components/SchemeOrder.js","App.js","serviceWorker.js","index.js"],"names":["SchemesList","schemeClicked","props","id","className","schemes","map","el","key","handle","onClick","src","img","title","NavButtons","onBack","onNext","nextText","rest","icon","faArrowLeft","window","scrollTo","faArrowUp","faArrowRight","SchemeConfiguration","schemeSelected","changePage","onChangeOrder","page","scheme","useState","height","width","sfrido","schemeType","schemeColor","form","setForm","useEffect","handleFormChange","e","val","value","target","parseFloat","name","schemeList","type","checked","onChange","alt","class","href","rel","download","schemeColorsList","color","required","style","marginLeft","Object","entries","alert","tiles","TileObjects","Dot","s","x","y","colorType","r","t","fuga","this","draw","limitX","limitY","fig","rect","attr","fill","Square","size","Rectangular","offSetX","offSetY","transform","Squarex4","Rectangularx4","Trapezi","polygon","TileMap","order","resetOrder","fugaColors","fugaColor","colors","tilesColors","getColors","i","length","calculateOrderUpdate","xCursorPos","yCursorPos","widthWithSfrido","heightWithSfrido","sizeX","sizeY","drawLayout","tileMap","match","schemesStructures","tilesMap","tilesDesc","tilesColorAlgorithm","startPoint","stepHorizontalOffset","stepVerticalOffset","forcex4","schemeColorType","amplied","d","flat","Array","j","Math","floor","k","l","canBeDrawn","yIndex","xIndex","objId","tile","rotation","canDrawX","canDrawY","amountTiles","tilesCount","push","amountObject","parseInt","amountColors","amountTilesDot","amountTilesSquare","amountTilesRectangular","amountTilesSquarex4","amountTilesRectangularx4","amountTilesTrapezi","orderColors","color1","color2","color3","color4","color5","color6","shadedColor","percent","f","slice","p","R","G","B","round","toString","shadeColor2","color_glaze1","color_invglaze1","sqm","sqmWOSfrido","aux","assign","orderCode","amountTotal","total","keys","sum","colorName","amount","isGlazeed","replace","codeString","index","code","tilesCode","substring","colorCode","schemeCode","center","box","getBBox","x2","y2","node","ColorModal","visible","setVisible","classname","background","SchemeVisualization","setOrder","setOrderImage","paper","setPaper","colorModal","setColorModal","modalVisible","setModalVisible","Snap","viewBox","group","select","clear","xi","yi","updateOrder","renderTiles","line","stroke","strokeWidth","strokeLinecap","text","circle","renderGrid","document","querySelector","click","render","initSvg","initControls","openModal","colorId","update","schemeTitle","schemeColorTitle","cx","cy","a","svgString2Image","toDataURL","orderImageData","svg","reset","pivot","proxy","createElement","viewport","rotateThreshold","reachedThreshold","point","createSVGPoint","startClient","startGlobal","baseVal","cachedViewBox","zoom","animation","TimelineLite","scaleFactor","duration","ease","Power2","easeOut","TweenLite","set","scale","resetAnimation","pivotAnimation","to","alpha","paused","pannable","Draggable","throwResistance","trigger","throwProps","onPress","selectDraggable","onDrag","updateViewBox","onThrowUpdate","rotatable","liveSnap","snap","dx","abs","pointerX","dy","pointerY","isThrowing","event","isActive","kill","matrixTransform","getScreenCTM","inverse","disable","enable","startDrag","reverse","moveGlobal","addEventListener","Power3","tween","smoothOrigin","svgOrigin","normalized","preventDefault","delta","wheelDelta","deltaY","detail","scaleDelta","clientX","clientY","fromVars","from","svgString","format","callback","Promise","resolve","reject","svgData","canvas","context","getContext","image","Image","onload","clearRect","drawImage","pngData","onerror","console","log","SchemeOrder","orderImage","schemeImg","useRef","surname","company","job","phone","city","country","email","customer","setCustomer","custom","boxAmounts","totalKgs","groutTotalKgs","groutBoxes","ceil","schemeBoxSqm","schemeBoxKg","schemeGroutKgSqm","groutCode","fugaCodes","rows","header","dot","square","rectangular","squarex4","rectangularx4","trapezes","schemeNumber","schemePage","ref","schemeSizes","schemeThickness","schemeBoxPcs","schemePalletBoxes","schemePalletSqm","schemePalletKg","rowspan","display","alignItems","justifyContent","marginTop","html2canvas","windowWidth","windowHeight","scrollX","scrollY","then","pdf","jsPDF","unit","addImage","test","navigator","userAgent","toLowerCase","open","output","filename","save","ctx","current","emptyValues","values","String","axios","post","res","data","catch","err","ORDER","schemeID","App","setSchemeSelected","currentPage","setCurrentPage","change","pageVisible","marginBottom","newOrder","classNames","info","sizes","thickness","kg","pcs","pallet","boxes","grout","kgsqm","Boolean","location","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f02be4f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport schemes from \"../assets/api/schemes.json\";\r\n\r\nconst SchemesList = ({ schemeClicked, ...props }) => {\r\n  return (\r\n    <div id=\"page-scheme-selector\" {...props}>\r\n      <h2>Choose your scheme</h2>\r\n      <ul id=\"scheme-container\" className=\"grid-simple\">\r\n        {schemes.map((el, id) => (\r\n          <li key={el.handle}>\r\n            <button onClick={() => schemeClicked(el, id)}>\r\n              <img src={el.img} />\r\n              <h3>{el.title}</h3>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemesList;\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowUp,\r\n  faArrowLeft,\r\n  faArrowRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NavButtons = ({ onBack, onNext, nextText, ...rest }) => {\r\n  return (\r\n    <div className=\"nav-buttons\" {...rest}>\r\n      <button className=\"outline-btn nav-btn\" onClick={onBack}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n        BACK\r\n      </button>\r\n      <button\r\n        className=\"outline-btn nav-btn nav-btn-center\"\r\n        onClick={() => window.scrollTo(0, 0)}\r\n      >\r\n        <FontAwesomeIcon icon={faArrowUp} />\r\n      </button>\r\n      <button className=\"outline-btn nav-btn\" onClick={onNext}>\r\n        {nextText ? nextText : \"NEXT\"}\r\n        <FontAwesomeIcon icon={faArrowRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport NavButtons from \"./NavButtons\";\r\nimport schemes from \"../assets/api/schemes.json\";\r\n\r\nconst SchemeConfiguration = ({\r\n  schemeSelected,\r\n  changePage,\r\n  onChangeOrder,\r\n  page,\r\n  ...props\r\n}) => {\r\n  const scheme = schemes[schemeSelected];\r\n  const [form, setForm] = useState({\r\n    height: 0,\r\n    width: 0,\r\n    sfrido: 0,\r\n    schemeType: null,\r\n    schemeColor: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (page === \"list\") {\r\n      setForm({\r\n        ...form,\r\n        schemeType: null,\r\n        schemeColor: null\r\n      });\r\n    }\r\n  }, [page]);\r\n\r\n  const handleFormChange = (e, val) => {\r\n    let value;\r\n\r\n    if (val) {\r\n      value = val;\r\n    } else {\r\n      value = e.target.value === \"\" ? 0 : parseFloat(e.target.value);\r\n      value = value ? value : 0;\r\n    }\r\n\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value\r\n    });\r\n  };\r\n\r\n  const submitOrder = () => {\r\n    for (let [name, value] of Object.entries(form)) {\r\n      switch (name) {\r\n        case \"height\":\r\n          if (!value && value !== 0) {\r\n            alert(\"height must be a number\");\r\n            return;\r\n          }\r\n          if (value <= 0) {\r\n            alert(\"height must be greater than 0\");\r\n            return;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"width\":\r\n          if (!value && value !== 0) {\r\n            alert(\"width must be a number\");\r\n            return;\r\n          }\r\n          if (value <= 0) {\r\n            alert(\"width must be greater than 0\");\r\n            return;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"sfrido\":\r\n          if (!value && value !== 0) {\r\n            alert(\"sfrido must be a number\");\r\n            return;\r\n          }\r\n          if (value < 0) {\r\n            alert(\"sfrido must be equal or greater than 0\");\r\n            return;\r\n          }\r\n\r\n          break;\r\n        case \"schemeType\":\r\n          if (!value) {\r\n            alert(\"Missing choice in section 1\");\r\n            return;\r\n          }\r\n\r\n        case \"schemeColor\":\r\n          if (!value) {\r\n            alert(\"Missing choice in section 2\");\r\n            return;\r\n          }\r\n      }\r\n    }\r\n\r\n    onChangeOrder(form);\r\n    changePage(+1);\r\n  };\r\n\r\n  return (\r\n    <div id=\"page-layout-selector\" {...props}>\r\n      <ul id=\"layout-container\">\r\n        <li className=\"section-row\">\r\n          <div className=\"number\" />\r\n          <span id=\"layout-title-container\">\r\n            <h2 id=\"layout-title\">{scheme.title}</h2>\r\n            <h3 id=\"layout-description\">\r\n              SELECT ONE CHOICE IN EVERY SECTION / SELEZIONA UN OPZIONE PER\r\n              SEZIONE\r\n            </h3>\r\n          </span>\r\n        </li>\r\n        <li className=\"section-row\">\r\n          <div className=\"number\">1.</div>\r\n          <div id=\"layout-scheme-list\" className=\"grid-simple border\">\r\n            {scheme.schemeList.map((el, id) => (\r\n              <label key={el.img}>\r\n                <img src={el.img} />\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"schemeType\"\r\n                  className=\"scheme-type\"\r\n                  checked={el === form.schemeType}\r\n                  onChange={e => handleFormChange(e, el)}\r\n                />\r\n                <div className=\"check-svg\">\r\n                  <img\r\n                    src=\"/assets/img/layout/TickGreenSVG.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </div>\r\n              </label>\r\n            ))}\r\n            <label class=\"download-button\">\r\n              <a\r\n                href={`/assets/pdf/${scheme.handle}.pdf`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                download\r\n              >\r\n                <img src=\"/assets/img/download-button.jpg\" alt=\"Download\" />\r\n              </a>\r\n            </label>\r\n          </div>\r\n        </li>\r\n        <li className=\"section-row\">\r\n          <div className=\"number\">2.</div>\r\n          <div id=\"layout-scheme-color\" className=\"grid-simple border\">\r\n            {scheme.schemeColorsList.map((color, id) => (\r\n              <label key={color.img}>\r\n                <img src={color.img} />\r\n                {color.title}\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"schemeColor\"\r\n                  className=\"scheme-color\"\r\n                  checked={color === form.schemeColor}\r\n                  onChange={e => handleFormChange(e, color)}\r\n                />\r\n                <div className=\"check-svg\">\r\n                  <img\r\n                    src=\"/assets/img/layout/TickGreenSVG.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </div>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </li>\r\n        <li id=\"layout-scheme-options\">\r\n          <div className=\"number\">3.</div>\r\n          <div id=\"layout-scheme-info\" className=\"border\">\r\n            <div className=\"row\">\r\n              <h4>width / larghezza</h4>\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"scheme-width\"\r\n                  name=\"width\"\r\n                  value={form.width}\r\n                  onChange={handleFormChange}\r\n                  required\r\n                />\r\n                <small>cm</small>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <h4>height / altezza</h4>\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"scheme-height\"\r\n                  name=\"height\"\r\n                  value={form.height}\r\n                  onChange={handleFormChange}\r\n                  required\r\n                />\r\n                <small>cm</small>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <h4>waste / sfrido</h4>\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"scheme-sfrido\"\r\n                  name=\"sfrido\"\r\n                  value={form.sfrido}\r\n                  onChange={handleFormChange}\r\n                  required\r\n                />\r\n                <small>%</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <NavButtons\r\n        style={{ marginLeft: 25 }}\r\n        onBack={() => changePage(-1)}\r\n        onNext={submitOrder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemeConfiguration;\r\n","import schemesStructures from \"../assets/api/schemes_structures.json\";\r\nimport colors from \"../assets/api/colors.json\";\r\nimport fugaColors from \"../assets/api/fugaColors.json\";\r\nimport code from \"../assets/api/code.json\";\r\n\r\nconst size = 25;\r\n\r\n//\r\n//  TILES CLASSES\r\n//\r\n\r\n//  Dot\r\n//  2.5cm * 2.5cm\r\nclass Dot {\r\n  constructor(s, x, y, color, colorType, r, t, fuga) {\r\n    this.s = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.fuga = fuga;\r\n\r\n    if (color) {\r\n      this.draw(color, colorType);\r\n    }\r\n  }\r\n\r\n  canBeDrawn(limitX, limitY) {\r\n    return limitX <= this.x && limitY <= this.y;\r\n  }\r\n\r\n  draw(color, colorType) {\r\n    this.fig = this.s.rect(this.x, this.y, size, size);\r\n    this.colorType = colorType;\r\n\r\n    this.fig.attr({\r\n      fill: color\r\n    });\r\n  }\r\n}\r\n\r\n//  Square\r\n//  5cm * 5cm\r\nclass Square {\r\n  constructor(s, x, y, color, colorType, r, t, fuga) {\r\n    this.s = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.fuga = fuga;\r\n\r\n    if (color) {\r\n      this.draw(color, colorType);\r\n    }\r\n  }\r\n\r\n  canBeDrawn(limitX, limitY) {\r\n    return (\r\n      limitX <= this.x + size * 1 + this.fuga &&\r\n      limitY <= this.y + size * 1 + this.fuga\r\n    );\r\n  }\r\n\r\n  draw(color, colorType, r, t) {\r\n    this.fig = this.s.rect(\r\n      this.x,\r\n      this.y,\r\n      size * 2 + this.fuga,\r\n      size * 2 + this.fuga\r\n    );\r\n    this.colorType = colorType;\r\n\r\n    this.fig.attr({\r\n      fill: color\r\n    });\r\n  }\r\n}\r\n\r\n// Rectangular\r\n// 10cm * 5cm\r\nclass Rectangular {\r\n  constructor(s, x, y, color, colorType, r, t, fuga) {\r\n    this.s = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n    this.fuga = fuga;\r\n\r\n    if (color) {\r\n      this.draw(color, colorType, r, t);\r\n    }\r\n  }\r\n\r\n  canBeDrawn(limitX, limitY) {\r\n    let width = size * 3 + this.fuga * 2;\r\n    let height = size * 1 + this.fuga;\r\n\r\n    let offSetX = this.x + (this.r === 2 ? height : width);\r\n    let offSetY = this.y + (this.r === 2 ? width : height);\r\n\r\n    return limitX <= offSetX && limitY <= offSetY;\r\n  }\r\n\r\n  draw(color, colorType, r, t) {\r\n    this.fig = this.s.rect(\r\n      this.x,\r\n      this.y,\r\n      size * 4 + this.fuga * 3,\r\n      size * 2 + this.fuga\r\n    );\r\n    this.colorType = colorType;\r\n\r\n    this.fig.attr({\r\n      fill: color\r\n    });\r\n\r\n    if (r || t) {\r\n      transform(r, t, this.fig, size + this.fuga);\r\n    }\r\n  }\r\n}\r\n\r\n// Square x4\r\n// 10cm * 10cm\r\nclass Squarex4 {\r\n  constructor(s, x, y, color, colorType, r, t, fuga) {\r\n    this.s = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.fuga = fuga;\r\n\r\n    if (color) {\r\n      this.draw(color, colorType);\r\n    }\r\n  }\r\n\r\n  canBeDrawn(limitX, limitY) {\r\n    return (\r\n      limitX <= this.x + size * 3 + this.fuga * 2 &&\r\n      limitY <= this.y + size * 3 + this.fuga * 2\r\n    );\r\n  }\r\n\r\n  draw(color, colorType) {\r\n    this.fig = this.s.rect(\r\n      this.x,\r\n      this.y,\r\n      size * 4 + this.fuga * 3,\r\n      size * 4 + this.fuga * 3\r\n    );\r\n    this.colorType = colorType;\r\n\r\n    this.fig.attr({\r\n      fill: color\r\n    });\r\n  }\r\n}\r\n\r\n// Rectangular x4\r\n// 20cm * 10cm\r\nclass Rectangularx4 {\r\n  constructor(s, x, y, color, colorType, r, t, fuga) {\r\n    this.s = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n    this.fuga = fuga;\r\n\r\n    if (color) {\r\n      this.draw(color, colorType, r, t);\r\n    }\r\n  }\r\n\r\n  canBeDrawn(limitX, limitY) {\r\n    let offSetX = this.x + (this.r === 2 ? size * 3 : size * 8);\r\n    let offSetY = this.y + (this.r === 2 ? size * 8 : size * 3);\r\n\r\n    return limitX <= offSetX && limitY <= offSetY;\r\n  }\r\n\r\n  draw(color, colorType, r, t) {\r\n    this.fig = this.s.rect(\r\n      this.x,\r\n      this.y,\r\n      size * 8 + this.fuga * 7,\r\n      size * 4 + this.fuga * 3\r\n    );\r\n    this.colorType = colorType;\r\n\r\n    this.fig.attr({\r\n      fill: color\r\n    });\r\n\r\n    if (r || t) {\r\n      transform(r, t, this.fig, size * 2 + this.fuga * 2);\r\n    }\r\n  }\r\n}\r\n\r\n// Rectangular x4\r\n// 20cm * 10cm\r\nclass Trapezi {\r\n  constructor(s, x, y, color, colorType, r, t, fuga) {\r\n    this.s = s;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n    this.fuga = fuga;\r\n\r\n    if (color) {\r\n      this.draw(color, colorType, r, t);\r\n    }\r\n  }\r\n\r\n  canBeDrawn(limitX, limitY) {\r\n    let offSetX = this.x;\r\n    let offSetY = this.y;\r\n\r\n    return limitX <= offSetX && limitY <= offSetY;\r\n  }\r\n\r\n  draw(color, colorType, r, t) {\r\n    this.fig = this.s.polygon([\r\n      this.x,\r\n      this.y,\r\n      this.x + 34.13,\r\n      this.y,\r\n      this.x + 69.06,\r\n      this.y + 104.8,\r\n      this.x,\r\n      this.y + 104.8\r\n    ]);\r\n    this.colorType = colorType;\r\n\r\n    this.fig.attr({\r\n      fill: color\r\n    });\r\n\r\n    if (r || t) {\r\n      transform(r, t, this.fig, 8.7);\r\n    }\r\n  }\r\n}\r\n\r\nconst TileObjects = {\r\n  Dot,\r\n  Square,\r\n  Rectangular,\r\n  Squarex4,\r\n  Rectangularx4,\r\n  Trapezi\r\n};\r\n\r\n// TILEMAP CLASS\r\n\r\nexport default class TileMap {\r\n  constructor(x, y, order) {\r\n    this.tiles = [];\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.order = resetOrder(order);\r\n  }\r\n\r\n  update(order) {\r\n    this.fuga.attr({ fill: fugaColors[order.fugaColor] });\r\n    this.order.colors = order.colors;\r\n    let tilesColors = getColors(this.order.colors, this);\r\n\r\n    for (let i = 0; i < this.tiles.length; i++) {\r\n      let key = this.tiles[i].colorType;\r\n      this.tiles[i].fig.attr({ fill: tilesColors[key] });\r\n    }\r\n  }\r\n\r\n  updateOrder() {\r\n    this.order = calculateOrderUpdate(this.order);\r\n    return this.order;\r\n  }\r\n\r\n  draw(s) {\r\n    let xCursorPos = this.order.width > 200 ? 200 : this.order.width;\r\n    let yCursorPos = this.order.height > 100 ? 100 : this.order.height;\r\n    this.fuga = s.rect(this.x, this.y, xCursorPos * 10, yCursorPos * 10).attr({\r\n      fill: fugaColors[this.order.fugaColor]\r\n    });\r\n\r\n    let tilesColors = getColors(this.order.colors, this);\r\n\r\n    this.order.widthWithSfrido =\r\n      this.order.width * (1 + this.order.sfrido / 100);\r\n    this.order.heightWithSfrido =\r\n      this.order.height * (1 + this.order.sfrido / 100);\r\n\r\n    this.sizeX = this.order.widthWithSfrido / 2.5;\r\n    this.sizeY = this.order.heightWithSfrido / 2.5;\r\n\r\n    if (!this.order.schemeType) return;\r\n\r\n    drawLayout(this, tilesColors, s);\r\n  }\r\n}\r\n\r\nconst drawLayout = (tileMap, tilesColors, s) => {\r\n  tileMap.sizeX = tileMap.order.widthWithSfrido / 2.5;\r\n  tileMap.sizeY = tileMap.order.heightWithSfrido / 2.5;\r\n\r\n  const type = tileMap.order.schemeType.match(/x4/i) ? \"typex4\" : \"type\";\r\n\r\n  let {\r\n    tilesMap,\r\n    tilesDesc,\r\n    tilesColorAlgorithm,\r\n    width,\r\n    height,\r\n    startPoint,\r\n    stepHorizontalOffset,\r\n    stepVerticalOffset,\r\n    forcex4\r\n  } = schemesStructures[tileMap.order.scheme];\r\n\r\n  if (\r\n    tilesColorAlgorithm &&\r\n    tilesColorAlgorithm[tileMap.order.schemeColorType]\r\n  ) {\r\n    stepHorizontalOffset =\r\n      tilesColorAlgorithm[tileMap.order.schemeColorType].stepHorizontalOffset;\r\n    stepVerticalOffset =\r\n      tilesColorAlgorithm[tileMap.order.schemeColorType].stepVerticalOffset;\r\n  }\r\n\r\n  if (type === \"typex4\" || forcex4) {\r\n    tilesMap = tilesMap\r\n      .map(e => {\r\n        let amplied = [e.map(d => [d, 0]).flat()];\r\n\r\n        return [...amplied, new Array(width * 2).fill(0)];\r\n      })\r\n      .flat();\r\n    width = width * 2;\r\n    height = height * 2;\r\n    stepHorizontalOffset = {\r\n      x: stepHorizontalOffset.x * 2,\r\n      y: stepHorizontalOffset.y * 2\r\n    };\r\n    stepVerticalOffset = {\r\n      x: stepVerticalOffset.x * 2,\r\n      y: stepVerticalOffset.y * 2\r\n    };\r\n  }\r\n\r\n  startPoint = startPoint[type];\r\n\r\n  // Calculate Y point to next scheme draw\r\n  for (\r\n    let i = 0 - startPoint.y;\r\n    i < tileMap.sizeY + height + 4;\r\n    i += stepVerticalOffset.y\r\n  ) {\r\n    let verticalStep = Math.floor(\r\n      (i / stepVerticalOffset.y) * stepVerticalOffset.x\r\n    );\r\n\r\n    // Calculate X point to next scheme draw\r\n    for (\r\n      let j = 0 - verticalStep - startPoint.x;\r\n      j < tileMap.sizeX + width + 4;\r\n      j += stepHorizontalOffset.x\r\n    ) {\r\n      // Loop scheme map\r\n\r\n      for (let k = 0; k < height; k++) {\r\n        for (let l = 0; l < width; l++) {\r\n          let x =\r\n            (j + l) * size +\r\n            (j + l) * tileMap.order.fuga +\r\n            tileMap.order.fuga +\r\n            tileMap.x -\r\n            106.4;\r\n          let y =\r\n            (i + k) * size +\r\n            (i + k) * tileMap.order.fuga +\r\n            tileMap.order.fuga +\r\n            tileMap.y -\r\n            106.4;\r\n\r\n          let yIndex = Math.floor(k % height);\r\n          let xIndex = Math.floor(l % width);\r\n\r\n          const objId = tilesMap[yIndex][xIndex];\r\n\r\n          let canBeDrawn = false;\r\n          let tile;\r\n\r\n          if (!tilesDesc[objId][type]) continue;\r\n\r\n          tile = new TileObjects[tilesDesc[objId][type]](\r\n            s,\r\n            x,\r\n            y,\r\n            null,\r\n            null,\r\n            tilesDesc[objId].rotation,\r\n            null,\r\n            tileMap.order.fuga\r\n          );\r\n          canBeDrawn = tile.canBeDrawn(tileMap.x, tileMap.y);\r\n\r\n          const color = tilesDesc[objId].color[tileMap.order.schemeColorType];\r\n\r\n          let canDrawX = x - tileMap.x;\r\n          let canDrawY = y - tileMap.y;\r\n\r\n          if (\r\n            tileMap.order.scheme === \"trapezi\" &&\r\n            tilesDesc[objId].rotation === 8\r\n          ) {\r\n            canDrawX -= 25;\r\n          }\r\n\r\n          if (!canBeDrawn) {\r\n            continue;\r\n          }\r\n\r\n          if (canDrawX > tileMap.order.widthWithSfrido * 10) {\r\n            continue;\r\n          }\r\n          if (canDrawY > tileMap.order.heightWithSfrido * 10) {\r\n            continue;\r\n          }\r\n\r\n          let amountTiles = \"amountTiles\" + tilesDesc[objId][type];\r\n          tileMap.order.tilesCount[amountTiles][color]++;\r\n\r\n          if (canDrawX > tileMap.order.width * 10) {\r\n            continue;\r\n          }\r\n          if (canDrawY > tileMap.order.height * 10) {\r\n            continue;\r\n          }\r\n          if (canDrawX > 2000 || canDrawY > 1000) {\r\n            continue;\r\n          }\r\n\r\n          tile.draw(\r\n            tilesColors[color],\r\n            color,\r\n            tilesDesc[objId].rotation,\r\n            null,\r\n            tileMap.order.fuga\r\n          );\r\n          tileMap.tiles.push(tile);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// ORDER STRUCTURE\r\nconst resetOrder = order => {\r\n  let amountObject = {};\r\n\r\n  for (let i in order.colors) {\r\n    amountObject[`color${parseInt(i) + 1}`] = 0;\r\n    amountObject[`color_glaze${parseInt(i) + 1}`] = 0;\r\n    amountObject[`color_invglaze${parseInt(i) + 1}`] = 0;\r\n  }\r\n\r\n  order.tilesCount = {\r\n    amountColors: order.colors.length,\r\n    amountTilesDot: { ...amountObject },\r\n    amountTilesSquare: { ...amountObject },\r\n    amountTilesRectangular: { ...amountObject },\r\n    amountTilesSquarex4: { ...amountObject },\r\n    amountTilesRectangularx4: { ...amountObject },\r\n    amountTilesTrapezi: { ...amountObject }\r\n  };\r\n\r\n  return order;\r\n};\r\n\r\nconst getColors = (orderColors, e) => {\r\n  let color1 = colors[orderColors[0]];\r\n  let color2 = colors[orderColors[1]];\r\n  let color3 = colors[orderColors[2]];\r\n  let color4 = colors[orderColors[3]];\r\n  let color5 = colors[orderColors[4]];\r\n  let color6 = colors[orderColors[5]];\r\n\r\n  let shadedColor = shadeColor2(color1, 0.5);\r\n  let normalGradient = `l(1,0,0,0)${color1}-${shadedColor}`;\r\n  let inverseGradient = `l(1,0,0,0)${shadedColor}-${color1}`;\r\n\r\n  let color_glaze1 = normalGradient;\r\n  let color_invglaze1 = inverseGradient;\r\n\r\n  return {\r\n    color1,\r\n    color2,\r\n    color3,\r\n    color4,\r\n    color5,\r\n    color6,\r\n    color_glaze1,\r\n    color_invglaze1\r\n  };\r\n};\r\n\r\nconst calculateOrderUpdate = order => {\r\n  order.sqm = (order.widthWithSfrido * order.heightWithSfrido) / 10000;\r\n  order.sqmWOSfrido = (order.width * order.height) / 10000;\r\n\r\n  let aux = Object.assign({}, order.tilesCount);\r\n\r\n  let orderCode = \"TG\";\r\n\r\n  let amountTotal = {\r\n    total: 0\r\n  };\r\n\r\n  for (let [key, val] of Object.entries(aux)) {\r\n    if (!Object.keys(val).length) continue;\r\n    if (key === \"amountTotal\") continue;\r\n\r\n    let sum = 0;\r\n\r\n    for (let [colorName, amount] of Object.entries(val)) {\r\n      if (colorName === \"total\") continue;\r\n\r\n      let isGlazeed = false;\r\n\r\n      if (colorName.match(/glaze/)) {\r\n        isGlazeed = true;\r\n        colorName = colorName.replace(\"_glaze\", \"\");\r\n        colorName = colorName.replace(\"_invglaze\", \"\");\r\n        val[colorName] += amount;\r\n      }\r\n\r\n      amount = parseInt(amount);\r\n\r\n      if (!amountTotal[colorName]) amountTotal[colorName] = 0;\r\n\r\n      amountTotal[colorName] += amount;\r\n      sum += amount;\r\n\r\n      if (!amount > 0) continue;\r\n\r\n      let codeString = \"\";\r\n\r\n      if (isGlazeed) codeString += \"G\";\r\n\r\n      let index = parseInt(colorName.match(/color(.*)/)[1]) - 1;\r\n\r\n      orderCode +=\r\n        codeString +\r\n        code.tilesCode[key.substring(11)] +\r\n        code.colorCode[order.colors[index]];\r\n    }\r\n\r\n    val[\"total\"] = sum;\r\n    amountTotal.total += sum;\r\n  }\r\n\r\n  aux.amountTotal = amountTotal;\r\n\r\n  orderCode += \".\" + code.schemeCode[order.scheme];\r\n\r\n  order.orderCode = orderCode;\r\n  order.tilesCount = aux;\r\n\r\n  return order;\r\n};\r\n\r\n// UTILS FUNCTIONS\r\nfunction transform(r, t, e, center) {\r\n  let box = e.getBBox();\r\n  let x = (box.x2 + box.x) / 2 - center;\r\n  let y = (box.y2 + box.y) / 2;\r\n  let query = \"\";\r\n\r\n  e.node.style[\"transform-origin\"] = x + \"px \" + y + \"px\";\r\n  if (r === 2) {\r\n    e.node.style.transform = \"rotate(90deg)\";\r\n  } else if (r === 8) {\r\n    e.node.style.transform = \"rotate(180deg)\";\r\n  }\r\n\r\n  if (t) {\r\n    if (r == 2) {\r\n      if (t == 2) {\r\n        query += `t0,${box.height / 2}`;\r\n      } else if (t == 8) {\r\n        query += `t0,${-box.height / 2}`;\r\n      } else if (t == 4) {\r\n        query += `t${-box.height / 2},0`;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (r) {\r\n    if (r == 2) {\r\n      query += `r90,${x},${y}`;\r\n    } else if (r == 8) {\r\n      query += `r270,${x},${y}`;\r\n    } else if (r == 4) {\r\n      query += `r180,${x},${y}`;\r\n    }\r\n  }\r\n\r\n  //e.transform(query);\r\n}\r\n\r\nfunction shadeColor2(color, percent) {\r\n  var f = parseInt(color.slice(1), 16),\r\n    t = percent < 0 ? 0 : 255,\r\n    p = percent < 0 ? percent * -1 : percent,\r\n    R = f >> 16,\r\n    G = (f >> 8) & 0x00ff,\r\n    B = f & 0x0000ff;\r\n  return (\r\n    \"#\" +\r\n    (\r\n      0x1000000 +\r\n      (Math.round((t - R) * p) + R) * 0x10000 +\r\n      (Math.round((t - G) * p) + G) * 0x100 +\r\n      (Math.round((t - B) * p) + B)\r\n    )\r\n      .toString(16)\r\n      .slice(1)\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport NavButtons from \"./NavButtons\";\r\nimport colors from \"../assets/api/colors.json\";\r\nimport fugaColors from \"../assets/api/fugaColors.json\";\r\nimport TileMap from \"./structures\";\r\n\r\nlet tiles;\r\n\r\nconst ColorModal = ({\r\n  colors,\r\n  visible,\r\n  colorName,\r\n  setVisible,\r\n  onChange,\r\n  checked,\r\n  ...props\r\n}) => {\r\n  const classname = visible ? \"color-modal visible\" : \"color-modal\";\r\n\r\n  return (\r\n    <div className={classname}>\r\n      <div className=\"border\">\r\n        <h3>{colorName}</h3>\r\n        <div className=\"color-grid\">\r\n          {Object.keys(colors).map(color => (\r\n            <label className=\"color-column\" onChange={onChange}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"color-selector\"\r\n                className=\"color-selector\"\r\n                value={color}\r\n                checked={checked === color ? true : false}\r\n              />\r\n              <div\r\n                className=\"color-fill\"\r\n                style={{ background: colors[color] }}\r\n              />\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button className=\"outline-btn\" onClick={() => setVisible(false)}>\r\n          Ok\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SchemeVisualization = ({\r\n  order,\r\n  setOrder,\r\n  changePage,\r\n  setOrderImage,\r\n  ...props\r\n}) => {\r\n  const [paper, setPaper] = useState({});\r\n  const [colorModal, setColorModal] = useState({\r\n    name: \"Color 1\",\r\n    checked: \"white\",\r\n    colors: colors,\r\n    type: \"color\",\r\n    id: 0\r\n  });\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPaper(initSvg(order));\r\n  }, [order]);\r\n\r\n  useEffect(() => {\r\n    initControls();\r\n  }, []);\r\n\r\n  const openModal = (color, colorId, type) => e => {\r\n    setColorModal({\r\n      type,\r\n      id: colorId,\r\n      name: type === \"color\" ? `Color ${colorId + 1}` : \"Fuga\",\r\n      checked: color,\r\n      colors: type === \"color\" ? colors : fugaColors\r\n    });\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const onChange = e => {\r\n    if (colorModal.type === \"color\") {\r\n      order.colors[colorModal.id] = e.target.value;\r\n    } else if (colorModal.type === \"fuga\") {\r\n      order.fugaColor = e.target.value;\r\n    }\r\n\r\n    setColorModal({\r\n      ...colorModal,\r\n      checked: e.target.value\r\n    });\r\n\r\n    tiles.update(order);\r\n    setOrder(tiles.updateOrder());\r\n  };\r\n\r\n  return (\r\n    <div id=\"page-visualization\" {...props}>\r\n      <div className=\"reset-button\">\r\n        <button id=\"reset\" className=\"outline-btn\">\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <div id=\"color-modals\">\r\n        <ColorModal\r\n          colorName={colorModal.name}\r\n          colors={colorModal.colors}\r\n          visible={modalVisible}\r\n          setVisible={setModalVisible}\r\n          onChange={onChange}\r\n          checked={colorModal.checked}\r\n        />\r\n      </div>\r\n      <div id=\"tiles-layout\">\r\n        <h2>{order.schemeTitle}</h2>\r\n        <h3>{order.schemeColorTitle}</h3>\r\n        <div className=\"color-selectors\">\r\n          {order.colors.map((el, id) => (\r\n            <div className=\"color\" key={id}>\r\n              <span>{`Color ${id + 1}`}</span>\r\n              <div\r\n                onClick={openModal(el, id, \"color\")}\r\n                className=\"color-fill\"\r\n                style={{\r\n                  background: colors[el]\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"color color-fuga\">\r\n            <span>{`Fuga / Joint`}</span>\r\n            <div\r\n              onClick={openModal(order.fugaColor, 0, \"fuga\")}\r\n              className=\"color-fill\"\r\n              style={{\r\n                background: fugaColors[order.fugaColor]\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"order-sizes\">\r\n          <span>{`width - larghezza: ${order.width}cm`}</span>\r\n          <span>{`height - altezza: ${order.height}cm`}</span>\r\n        </div>\r\n      </div>\r\n      <svg id=\"tiles\" />\r\n      <svg id=\"svg-pivot\">\r\n        <circle id=\"pivot\" className=\"pivot\" cx=\"0\" cy=\"0\" r=\"6\" />\r\n      </svg>\r\n      <NavButtons\r\n        onBack={() => changePage(-1)}\r\n        onNext={async () => {\r\n          paper.attr({ viewBox: \"0 0 2600 1400\" });\r\n          const orderImageData = await svgString2Image(\r\n            paper.toDataURL(),\r\n            1300,\r\n            700\r\n          );\r\n          setOrderImage(orderImageData);\r\n          changePage(+1);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemeVisualization;\r\n\r\nfunction initSvg(order) {\r\n  let paper = window.Snap(\"#tiles\");\r\n  paper.attr({ viewBox: \"0 0 2600 1400\" });\r\n\r\n  let tilesGroup = paper.group();\r\n  tilesGroup.attr({ id: \"tiles-group\" });\r\n\r\n  render();\r\n\r\n  return paper;\r\n\r\n  function render() {\r\n    let xi = 210;\r\n    let yi = 100;\r\n\r\n    //gui.clear();\r\n    let s = paper.select(\"#tiles-group\");\r\n    s.clear();\r\n\r\n    /*\r\n    fuga = s.rect(xi + 100, yi + 100, xCursorPos * 10, yCursorPos * 10).attr({\r\n      fill: fugaColors[order.fugaColor]\r\n    });*/\r\n\r\n    renderTiles(s, xi + 100, yi + 100);\r\n    renderGrid(s, xi, yi);\r\n    document.querySelector(\"#reset\").click();\r\n  }\r\n\r\n  function renderTiles(s, xi, yi) {\r\n    tiles = new TileMap(xi, yi, order);\r\n\r\n    tiles.draw(s);\r\n    order = tiles.updateOrder();\r\n  }\r\n\r\n  function renderGrid(s, xi, yi) {\r\n    // Axis lines\r\n    let xLine = s.line(xi, yi, xi + 2100, yi).attr({\r\n      stroke: \"#888\",\r\n      strokeWidth: 2,\r\n      strokeLinecap: \"round\"\r\n    });\r\n\r\n    let yLine = s.line(xi, yi, xi, yi + 1100).attr({\r\n      stroke: \"#888\",\r\n      strokeWidth: 2,\r\n      strokeLinecap: \"round\"\r\n    });\r\n\r\n    // Area layout lines\r\n\r\n    let xCursorPos = order.width > 200 ? 200 : order.width;\r\n    let yCursorPos = order.height > 100 ? 100 : order.height;\r\n\r\n    let x1CursorLine = s.line(xi + 100, yi, xi + 100, yi + 1100).attr({\r\n      stroke: \"#444\",\r\n      strokeWidth: 5,\r\n      strokeLinecap: \"round\",\r\n      \"stroke-dasharray\": 20 + \" \" + 20\r\n    });\r\n\r\n    let x2CursorLine = s\r\n      .line(\r\n        xCursorPos * 10 + xi + 100,\r\n        yi,\r\n        xCursorPos * 10 + xi + 100,\r\n        yi + 1100\r\n      )\r\n      .attr({\r\n        stroke: \"#444\",\r\n        strokeWidth: 5,\r\n        strokeLinecap: \"round\",\r\n        \"stroke-dasharray\": 20 + \" \" + 20\r\n      });\r\n\r\n    let xCursorPosText = s\r\n      .text(xCursorPos * 10 + xi + 100, yi - 50, xCursorPos + \"cm\")\r\n      .attr({\r\n        \"font-size\": 50\r\n      });\r\n    let xCursor = s.circle(xCursorPos * 10 + xi + 100, yi, 30).attr({\r\n      fill: \"#ccc\",\r\n      stroke: \"#888\",\r\n      strokeWidth: 2\r\n    });\r\n\r\n    let y1CursorLine = s.line(xi, yi + 100, xi + 2100, yi + 100).attr({\r\n      stroke: \"#444\",\r\n      strokeWidth: 5,\r\n      strokeLinecap: \"round\",\r\n      \"stroke-dasharray\": 20 + \" \" + 20\r\n    });\r\n\r\n    let y2CursorLine = s\r\n      .line(\r\n        xi,\r\n        yi + yCursorPos * 10 + 100,\r\n        xi + 2100,\r\n        yi + 100 + yCursorPos * 10\r\n      )\r\n      .attr({\r\n        stroke: \"#444\",\r\n        strokeWidth: 5,\r\n        strokeLinecap: \"round\",\r\n        \"stroke-dasharray\": 20 + \" \" + 20\r\n      });\r\n\r\n    let yCursorPosText = s\r\n      .text(xi - 200, yi + yCursorPos * 10 + 100, yCursorPos + \"cm\")\r\n      .attr({\r\n        \"font-size\": 50\r\n      });\r\n    let yCursor = s.circle(xi, yi + yCursorPos * 10 + 100, 30).attr({\r\n      fill: \"#ccc\",\r\n      stroke: \"#888\",\r\n      strokeWidth: 2\r\n    });\r\n  }\r\n}\r\n\r\nconst initControls = () => {\r\n  let svg = document.querySelector(\"#tiles\");\r\n  let reset = document.querySelector(\"#reset\");\r\n  let pivot = document.querySelector(\"#pivot\");\r\n  let proxy = document.createElement(\"div\");\r\n  let viewport = document.querySelector(\"#tiles-group\");\r\n\r\n  let rotateThreshold = 4;\r\n  let reachedThreshold = false;\r\n\r\n  let point = svg.createSVGPoint();\r\n  let startClient = svg.createSVGPoint();\r\n  let startGlobal = svg.createSVGPoint();\r\n\r\n  let viewBox = svg.viewBox.baseVal;\r\n\r\n  let cachedViewBox = {\r\n    x: viewBox.x,\r\n    y: viewBox.y,\r\n    width: viewBox.width,\r\n    height: viewBox.height\r\n  };\r\n\r\n  let zoom = {\r\n    animation: new window.TimelineLite(),\r\n    scaleFactor: 1.6,\r\n    duration: 0.5,\r\n    ease: window.Power2.easeOut\r\n  };\r\n\r\n  window.TweenLite.set(pivot, { scale: 0 });\r\n\r\n  let resetAnimation = new window.TimelineLite();\r\n  let pivotAnimation = window.TweenLite.to(pivot, 0.1, {\r\n    alpha: 1,\r\n    scale: 1,\r\n    paused: true\r\n  });\r\n\r\n  let pannable = new window.Draggable(proxy, {\r\n    throwResistance: 3000,\r\n    trigger: viewport,\r\n    throwProps: true,\r\n    onPress: selectDraggable,\r\n    onDrag: updateViewBox,\r\n    onThrowUpdate: updateViewBox\r\n  });\r\n\r\n  let rotatable = new window.Draggable(viewport, {\r\n    type: \"rotation\",\r\n    trigger: svg,\r\n    throwProps: true,\r\n    liveSnap: true,\r\n    snap: checkThreshold,\r\n    onPress: selectDraggable\r\n  });\r\n\r\n  rotatable.disable();\r\n\r\n  reset.addEventListener(\"click\", resetViewport);\r\n  svg.addEventListener(\"wheel\", onWheel);\r\n  window.addEventListener(\"resize\", function() {\r\n    pivotAnimation.reverse();\r\n  });\r\n\r\n  //\r\n  // ON WHEEL\r\n  // ===========================================================================\r\n  function onWheel(event) {\r\n    event.preventDefault();\r\n\r\n    pivotAnimation.reverse();\r\n\r\n    let normalized;\r\n    let delta = event.wheelDelta;\r\n\r\n    if (delta) {\r\n      normalized = delta % 120 == 0 ? delta / 120 : delta / 12;\r\n    } else {\r\n      delta = event.deltaY || event.detail || 0;\r\n      normalized = -(delta % 3 ? delta * 10 : delta / 3);\r\n    }\r\n\r\n    let scaleDelta = normalized > 0 ? 1 / zoom.scaleFactor : zoom.scaleFactor;\r\n\r\n    point.x = event.clientX;\r\n    point.y = event.clientY;\r\n\r\n    if (\r\n      (viewBox.width * scaleDelta > 2600 ||\r\n        viewBox.height * scaleDelta > 1400) &&\r\n      delta < 0\r\n    ) {\r\n      scaleDelta = 2600 / viewBox.width;\r\n      scaleDelta = 1400 / viewBox.height;\r\n    }\r\n\r\n    let startPoint = point.matrixTransform(svg.getScreenCTM().inverse());\r\n\r\n    let fromVars = {\r\n      ease: zoom.ease,\r\n      x: viewBox.x,\r\n      y: viewBox.y,\r\n      width: viewBox.width,\r\n      height: viewBox.height\r\n    };\r\n\r\n    viewBox.x -= (startPoint.x - viewBox.x) * (scaleDelta - 1);\r\n    viewBox.y -= (startPoint.y - viewBox.y) * (scaleDelta - 1);\r\n    viewBox.width *= scaleDelta;\r\n    viewBox.height *= scaleDelta;\r\n\r\n    zoom.animation = window.TweenLite.from(viewBox, zoom.duration, fromVars);\r\n  }\r\n\r\n  //\r\n  // SELECT DRAGGABLE\r\n  // ===========================================================================\r\n  function selectDraggable(event) {\r\n    if (resetAnimation.isActive()) {\r\n      resetAnimation.kill();\r\n    }\r\n\r\n    startClient.x = this.pointerX;\r\n    startClient.y = this.pointerY;\r\n\r\n    startGlobal = startClient.matrixTransform(svg.getScreenCTM().inverse());\r\n\r\n    window.TweenLite.set(proxy, {\r\n      x: this.pointerX,\r\n      y: this.pointerY\r\n    });\r\n\r\n    rotatable.disable();\r\n    pannable\r\n      .enable()\r\n      .update()\r\n      .startDrag(event);\r\n    pivotAnimation.reverse();\r\n  }\r\n\r\n  //\r\n  // RESET VIEWPORT\r\n  // ===========================================================================\r\n  function resetViewport() {\r\n    let duration = 0.8;\r\n    let ease = window.Power3.easeOut;\r\n\r\n    pivotAnimation.reverse();\r\n\r\n    if (pannable.tween) {\r\n      pannable.tween.kill();\r\n    }\r\n\r\n    if (rotatable.tween) {\r\n      rotatable.tween.kill();\r\n    }\r\n\r\n    resetAnimation\r\n      .clear()\r\n      .to(\r\n        viewBox,\r\n        duration,\r\n        {\r\n          x: cachedViewBox.x,\r\n          y: cachedViewBox.y,\r\n          width: cachedViewBox.width,\r\n          height: cachedViewBox.height,\r\n          ease: ease\r\n        },\r\n        0\r\n      )\r\n      .to(\r\n        viewport,\r\n        duration,\r\n        {\r\n          attr: { transform: \"matrix(1,0,0,1,0,0)\" },\r\n          // rotation: \"0_short\",\r\n          smoothOrigin: false,\r\n          svgOrigin: \"0 0\",\r\n          ease: ease\r\n        },\r\n        0\r\n      );\r\n  }\r\n\r\n  //\r\n  // CHECK THRESHOLD\r\n  // ===========================================================================\r\n  function checkThreshold(value) {\r\n    if (reachedThreshold) {\r\n      return value;\r\n    }\r\n\r\n    let dx = Math.abs(this.pointerX - startClient.x);\r\n    let dy = Math.abs(this.pointerY - startClient.y);\r\n\r\n    if (dx > rotateThreshold || dy > rotateThreshold || this.isThrowing) {\r\n      reachedThreshold = true;\r\n      return value;\r\n    }\r\n\r\n    return this.rotation;\r\n  }\r\n\r\n  //\r\n  // UPDATE VIEWBOX\r\n  // ===========================================================================\r\n  function updateViewBox() {\r\n    if (zoom.animation.isActive()) {\r\n      return;\r\n    }\r\n\r\n    point.x = this.x;\r\n    point.y = this.y;\r\n\r\n    let moveGlobal = point.matrixTransform(svg.getScreenCTM().inverse());\r\n\r\n    viewBox.x -= moveGlobal.x - startGlobal.x;\r\n    viewBox.y -= moveGlobal.y - startGlobal.y;\r\n  }\r\n};\r\n\r\nfunction svgString2Image(svgString, width, height, format, callback) {\r\n  return new Promise((resolve, reject) => {\r\n    // set default for format parameter\r\n    format = format ? format : \"png\";\r\n    // SVG data URL from SVG string\r\n    var svgData = svgString;\r\n    // create canvas in memory(not in DOM)\r\n    var canvas = document.createElement(\"canvas\");\r\n    // get canvas context for drawing on canvas\r\n    var context = canvas.getContext(\"2d\");\r\n    // set canvas size\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    // create image in memory(not in DOM)\r\n    var image = new Image();\r\n    // later when image loads run this\r\n    image.onload = function() {\r\n      // async (happens later)\r\n      // clear canvas\r\n      context.clearRect(0, 0, width, height);\r\n      // draw image with SVG data to canvas\r\n      context.drawImage(image, 0, 0, width, height);\r\n      // snapshot canvas as png\r\n      var pngData = canvas.toDataURL(\"image/\" + format);\r\n      // pass png data URL to callback\r\n      resolve(pngData);\r\n    }; // end async\r\n    image.onerror = e => {\r\n      console.log(e);\r\n    };\r\n    // start loading SVG data into in memory image\r\n    image.src = svgData;\r\n  });\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowUp,\r\n  faArrowLeft,\r\n  faArrowRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport NavButtons from \"./NavButtons\";\r\n\r\nimport fugaCodes from \"../assets/api/fugaCodes.json\";\r\n\r\nconst SchemeOrder = ({ order, changePage, orderImage, ...props }) => {\r\n  const schemeImg = useRef(null);\r\n  const [customer, setCustomer] = useState({\r\n    name: \"\",\r\n    surname: \"\",\r\n    company: \"\",\r\n    job: \"\",\r\n    phone: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const onDownloadPdf = () => {\r\n    html2canvas(document.querySelector(\"#root\"), {\r\n      windowWidth: 1440,\r\n      windowHeight: 400,\r\n      width: 1440,\r\n      height: 3600,\r\n      scrollX: 0,\r\n      scrollY: 0,\r\n      x: 0,\r\n      y: 0\r\n    }).then(canvas => {\r\n      var pdf = new jsPDF({\r\n        unit: \"px\",\r\n        format: [1920, 3000]\r\n      });\r\n      pdf.addImage(canvas, \"JPEG\", 0, 0, 1440, 3600);\r\n\r\n      if (\r\n        /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(\r\n          navigator.userAgent.toLowerCase()\r\n        )\r\n      ) {\r\n        window.open(pdf.output(\"bloburl\", { filename: \"order.pdf\" }));\r\n      } else {\r\n        pdf.save(\"order.pdf\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = e => {\r\n    setCustomer({\r\n      ...customer,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const sendOrder = () => {\r\n    order.customer = customer;\r\n\r\n    const canvas = document.createElement(\"CANVAS\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.height = schemeImg.current.height;\r\n    canvas.width = schemeImg.current.width;\r\n    ctx.drawImage(\r\n      schemeImg.current,\r\n      0,\r\n      0,\r\n      schemeImg.current.width,\r\n      schemeImg.current.height\r\n    );\r\n    order.schemeImg = canvas.toDataURL();\r\n\r\n    order.orderImage = orderImage;\r\n\r\n    let emptyValues = false;\r\n\r\n    for (let val of Object.values(customer)) {\r\n      if (val === \"\") emptyValues = true;\r\n    }\r\n\r\n    if (emptyValues) {\r\n      alert(\"Please fill all customer values\");\r\n      return;\r\n    }\r\n    if (!validateEmail(customer.email)) {\r\n      alert(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n\r\n    console.log(order);\r\n\r\n    axios\r\n      .post(\"/order\", { order })\r\n      .then(res => {\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error\");\r\n        console.log(err);\r\n      });\r\n\r\n    alert(\"Order sent, thanks!\");\r\n    changePage(-3);\r\n    /*\r\n    fetch(\"/order\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify({ order }), // data can be `string` or {object}!\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n    alert(\"Order sent, thanks!\");\r\n    changePage(-3);*/\r\n  };\r\n\r\n  if (!order.custom) {\r\n    order.boxAmounts = Math.ceil(order.sqm / order.schemeBoxSqm);\r\n    order.totalKgs = Math.ceil(order.boxAmounts * order.schemeBoxKg);\r\n    order.groutTotalKgs = Math.ceil(order.sqm * order.schemeGroutKgSqm);\r\n    order.groutBoxes = Math.ceil(order.groutTotalKgs / 2.5);\r\n  } else {\r\n    order.boxAmounts = \"Custom\";\r\n    order.totalKgs = \"Custom\";\r\n    order.groutTotalKgs = \"Custom\";\r\n    order.groutBoxes = \"Custom\";\r\n  }\r\n\r\n  order.groutCode = fugaCodes[order.fugaColor];\r\n\r\n  let rows = {\r\n    header: [],\r\n    dot: [],\r\n    square: [],\r\n    rectangular: [],\r\n    squarex4: [],\r\n    rectangularx4: [],\r\n    trapezes: [],\r\n    total: []\r\n  };\r\n\r\n  // Fill tiles table\r\n  order.colors.map((val, id) => {\r\n    rows.header.push(\r\n      <td>\r\n        Color {id + 1}: <strong>{val}</strong> tiles\r\n      </td>\r\n    );\r\n    rows.dot.push(\r\n      <td>\r\n        {order.tilesCount.amountTilesDot[`color${parseInt(id) + 1}`]} tiles\r\n      </td>\r\n    );\r\n    rows.square.push(\r\n      <td>\r\n        {order.tilesCount.amountTilesSquare[`color${parseInt(id) + 1}`]} tiles\r\n      </td>\r\n    );\r\n    rows.rectangular.push(\r\n      <td>\r\n        {order.tilesCount.amountTilesRectangular[`color${parseInt(id) + 1}`]}{\" \"}\r\n        tiles\r\n      </td>\r\n    );\r\n    rows.squarex4.push(\r\n      <td>\r\n        {order.tilesCount.amountTilesSquarex4[`color${parseInt(id) + 1}`]} tiles\r\n      </td>\r\n    );\r\n    rows.rectangularx4.push(\r\n      <td>\r\n        {order.tilesCount.amountTilesRectangularx4[`color${parseInt(id) + 1}`]}\r\n        tiles\r\n      </td>\r\n    );\r\n    rows.trapezes.push(\r\n      <td>\r\n        {order.tilesCount.amountTilesTrapezi[`color${parseInt(id) + 1}`]}\r\n        tiles\r\n      </td>\r\n    );\r\n    rows.total.push(\r\n      <td>{order.tilesCount.amountTotal[`color${parseInt(id) + 1}`]} tiles</td>\r\n    );\r\n  });\r\n\r\n  let val = \"total\";\r\n\r\n  rows.header.push(<td>Total tiles</td>);\r\n  rows.dot.push(<td>{order.tilesCount.amountTilesDot[val]} tiles</td>);\r\n  rows.square.push(<td>{order.tilesCount.amountTilesSquare[val]} tiles</td>);\r\n  rows.rectangular.push(\r\n    <td>{order.tilesCount.amountTilesRectangular[val]} tiles</td>\r\n  );\r\n  rows.squarex4.push(\r\n    <td>{order.tilesCount.amountTilesSquarex4[val]} tiles</td>\r\n  );\r\n  rows.rectangularx4.push(\r\n    <td>{order.tilesCount.amountTilesRectangularx4[val]} tiles</td>\r\n  );\r\n  rows.trapezes.push(<td>{order.tilesCount.amountTilesTrapezi[val]} tiles</td>);\r\n  rows.total.push(<td>{order.tilesCount.amountTotal[val]} tiles</td>);\r\n\r\n  return (\r\n    <div id=\"order-page\" {...props}>\r\n      <div id=\"order-section\">\r\n        <h2>Microtiles</h2>\r\n        <h2>{order.schemeTitle}</h2>\r\n        <h3>Schema / Scheme {order.schemeNumber}</h3>\r\n        <h3>Catalogo Pag. / Catalogue Pag. {order.schemePage}</h3>\r\n        <br />\r\n        <div className=\"order-content\">\r\n          <img className=\"schemeImage\" src={order.schemeImg} ref={schemeImg} />\r\n\r\n          <table className=\"main-table\">\r\n            <tr>\r\n              <th>FORMATI / SIZES</th>\r\n              <td>{order.schemeSizes}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>SPESSORE / THICKNESS</th>\r\n              <td>{order.schemeThickness}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>FORNITO / DELIVERED</th>\r\n              <td>\r\n                Su rete\r\n                <br />\r\n                Mesh mounted\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <table className=\"main-table\">\r\n            <tr>\r\n              <th>SCATOLA / BOX</th>\r\n              <th>PALLET / PALLET</th>\r\n              <th>STUCCO / GROUT</th>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <table className=\"second-table\">\r\n                  <tr>\r\n                    <th>PZ / PCS</th>\r\n                    <td>{order.schemeBoxPcs}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>MQ / Sqm</th>\r\n                    <td>{order.schemeBoxSqm}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>KG / KG</th>\r\n                    <td>{order.schemeBoxKg}</td>\r\n                  </tr>\r\n                </table>\r\n              </td>\r\n\r\n              <td>\r\n                <table className=\"second-table\">\r\n                  <tr>\r\n                    <th>SCATOLE / BOXES</th>\r\n                    <td>{order.schemePalletBoxes}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>MQ / Sqm</th>\r\n                    <td>{order.schemePalletSqm}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>KG / KG</th>\r\n                    <td>{order.schemePalletKg}</td>\r\n                  </tr>\r\n                </table>\r\n              </td>\r\n\r\n              <td>\r\n                <table className=\"second-table\">\r\n                  <tr>\r\n                    <th>KG / MQ</th>\r\n                    <td rowspan=\"2\">{order.schemeGroutKgSqm}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>KG / Sqm</th>\r\n                  </tr>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div id=\"order-review\">\r\n          <h3>Order review</h3>\r\n          <h5>Order information</h5>\r\n          <table className=\"main-table\">\r\n            <tr>\r\n              <th>SCATOLE / BOXES</th>\r\n              <td>{order.boxAmounts}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>WIDTH - LARGHEZZA / HEIGHT - ALTEZZA</th>\r\n              <td>\r\n                {order.width}cm / {order.height}cm\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>WASTE - SFRIDO</th>\r\n              <td>{order.sfrido}%</td>\r\n            </tr>\r\n            <tr>\r\n              <th>MQ / Sqm (without sfrido)</th>\r\n              <td>{order.sqmWOSfrido}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>MQ / Sqm (with sfrido)</th>\r\n              <td>{order.sqm}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>KG / KG</th>\r\n              <td>{order.totalKgs}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>STUCCO KG / GROUT KG</th>\r\n              <td>{order.groutTotalKgs}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>STUCCO SCATOLE / GROUT BOXES</th>\r\n              <td>{order.groutBoxes}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>CODICE PRODOTTO / TILES CODE</th>\r\n              <td>{order.orderCode}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>STUCCO CODICE / GROUT CODE</th>\r\n              <td>{order.groutCode}</td>\r\n            </tr>\r\n          </table>\r\n\r\n          <h5>Order tiles</h5>\r\n          <table className=\"main-table\">\r\n            <tr id=\"tiles-header\">\r\n              <th>Tile type</th>\r\n              {rows.header}\r\n            </tr>\r\n            <tr id=\"tiles-amount-dot\">\r\n              <th>Dot</th>\r\n              {rows.dot}\r\n            </tr>\r\n            <tr id=\"tiles-amount-square\">\r\n              <th>Square</th>\r\n              {rows.square}\r\n            </tr>\r\n            <tr id=\"tiles-amount-rectangular\">\r\n              <th>Rectangular</th>\r\n              {rows.rectangular}\r\n            </tr>\r\n            <tr id=\"tiles-amount-squarex4\">\r\n              <th>Squarex4</th>\r\n              {rows.squarex4}\r\n            </tr>\r\n            <tr id=\"tiles-amount-rectangularx4\">\r\n              <th>Rectangularx4</th>\r\n              {rows.rectangularx4}\r\n            </tr>\r\n            <tr id=\"tiles-amount-trapezes\">\r\n              <th>Trapezes</th>\r\n              {rows.trapezes}\r\n            </tr>\r\n            <tr id=\"tiles-amount-total\">\r\n              <th>Total</th>\r\n              {rows.total}\r\n            </tr>\r\n          </table>\r\n\r\n          <h5>Order snapshot</h5>\r\n          <img className=\"orderImage\" src={orderImage} />\r\n\r\n          <h5>Customer information</h5>\r\n\r\n          <table className=\"main-table\">\r\n            <tr>\r\n              <th>Nome / Name</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Cognome / Surname</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"surname\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Azienda / Company</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Professione / Job</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"job\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Telefono / Phone</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Città / City</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Paese / Country</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Email</th>\r\n              <td>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: 20\r\n          }}\r\n        >\r\n          <button\r\n            className=\"outline-btn\"\r\n            onClick={onDownloadPdf}\r\n            style={{ width: 250 }}\r\n          >\r\n            Download order\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"nav-buttons\">\r\n        <button className=\"outline-btn nav-btn\" onClick={() => changePage(-1)}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n          BACK\r\n        </button>\r\n        <button\r\n          className=\"outline-btn nav-btn nav-btn-center\"\r\n          onClick={() => window.scrollTo(0, 0)}\r\n        >\r\n          <FontAwesomeIcon icon={faArrowUp} />\r\n        </button>\r\n        <button className=\"outline-btn nav-btn\" onClick={sendOrder}>\r\n          SEND\r\n          <FontAwesomeIcon icon={faArrowRight} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemeOrder;\r\n\r\nfunction validateEmail(email) {\r\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./assets/scss/style.scss\";\n\nimport html2canvas from \"html2canvas\";\n\nimport SchemesList from \"./components/SchemesList\";\nimport SchemeConfiguration from \"./components/SchemeConfiguration\";\nimport SchemeVisualization from \"./components/SchemeVisualization\";\nimport SchemeOrder from \"./components/SchemeOrder\";\n\nimport classNames from \"classnames\";\n\nconst ORDER = {\n  scheme: null,\n  schemeTitle: null,\n  schemeImg: null,\n  schemeID: null,\n  schemeType: null,\n  schemeSizes: null,\n  schemeThickness: null,\n  schemeBoxKg: null,\n  schemeBoxPcs: null,\n  schemeBoxSqm: null,\n  schemeColorTitle: null,\n  schemeColorType: null,\n  colors: [\"white\", \"white\", \"white\"],\n  fugaColor: \"bianco-assoluto\",\n  width: null,\n  height: null,\n  sfrido: null,\n  fuga: 1.6,\n  tilesCount: {\n    amountColors: 3,\n    amountTilesDot: new Array(4).fill(0),\n    amountTilesSquare: new Array(4).fill(0),\n    amountTilesRectangular: new Array(4).fill(0),\n    amountTilesSquarex4: new Array(4).fill(0),\n    amountTilesRectangularx4: new Array(4).fill(0),\n    amountTilesTrapezi: new Array(4).fill(0),\n    amountTotal: new Array(4).fill(0)\n  }\n};\n\nconst App = () => {\n  const [orderImage, setOrderImage] = useState(\"\");\n  const [schemeSelected, setSchemeSelected] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [order, setOrder] = useState(ORDER);\n\n  const schemeClicked = (scheme, schemeID) => {\n    window.scrollTo(0, 0);\n    setSchemeSelected(schemeID);\n    changePage(+1);\n\n    const newOrder = {\n      scheme: scheme.handle,\n      schemeID: schemeID,\n      schemeNumber: parseInt(schemeID) + 1,\n      schemeTitle: scheme.title,\n      schemePage: scheme.page\n    };\n\n    setOrder({ ...order, ...newOrder });\n  };\n\n  const changePage = change => {\n    window.scrollTo(0, 0);\n    setCurrentPage(currentPage + change);\n  };\n\n  const onChangeOrder = form => {\n    const newOrder = {};\n\n    newOrder.schemeType = form.schemeType.type;\n    newOrder.schemeImg = form.schemeType.img;\n    newOrder.custom = form.schemeType.custom ? true : false;\n    if (!form.schemeType.custom) {\n      newOrder.schemeSizes = form.schemeType.info.sizes;\n      newOrder.schemeThickness = form.schemeType.info.thickness;\n\n      newOrder.schemeBoxKg = form.schemeType.info.box.kg;\n      newOrder.schemeBoxPcs = form.schemeType.info.box.pcs;\n      newOrder.schemeBoxSqm = form.schemeType.info.box.sqm;\n\n      newOrder.schemePalletBoxes = form.schemeType.info.pallet.boxes;\n      newOrder.schemePalletSqm = form.schemeType.info.pallet.sqm;\n      newOrder.schemePalletKg = form.schemeType.info.pallet.kg;\n\n      newOrder.schemeGroutKgSqm = form.schemeType.info.grout.kgsqm;\n    } else {\n      newOrder.schemeSizes = \"Custom\";\n      newOrder.schemeThickness = \"Custom\";\n\n      newOrder.schemeBoxKg = \"Custom\";\n      newOrder.schemeBoxPcs = \"Custom\";\n      newOrder.schemeBoxSqm = \"Custom\";\n\n      newOrder.schemePalletBoxes = \"Custom\";\n      newOrder.schemePalletSqm = \"Custom\";\n      newOrder.schemePalletKg = \"Custom\";\n\n      newOrder.schemeGroutKgSqm = \"Custom\";\n    }\n\n    if (newOrder.schemeColorType !== form.schemeColor.type) {\n      if (form.schemeColor.type === \"6_COLOR\") {\n        newOrder.colors = [\n          order.colors[0],\n          order.colors[1] || \"white\",\n          order.colors[2] || \"white\",\n          order.colors[3] || \"white\",\n          order.colors[4] || \"white\",\n          order.colors[5] || \"white\"\n        ];\n      } else if (form.schemeColor.type === \"4_COLOR\") {\n        newOrder.colors = [\n          order.colors[0],\n          order.colors[1] || \"white\",\n          order.colors[2] || \"white\",\n          order.colors[3] || \"white\"\n        ];\n      } else if (form.schemeColor.type.match(/3/)) {\n        newOrder.colors = [\n          order.colors[0],\n          order.colors[1] || \"white\",\n          order.colors[2] || \"white\"\n        ];\n      } else if (form.schemeColor.type.match(/2/)) {\n        newOrder.colors = [order.colors[0], order.colors[1] || \"white\"];\n      } else if (\n        form.schemeColor.type === \"1_COLOR\" ||\n        form.schemeColor.type === \"GLAZE\" ||\n        form.schemeColor.type === \"MIX_GLAZE\"\n      ) {\n        newOrder.colors = [order.colors[0]];\n      }\n    }\n    newOrder.schemeColorType = form.schemeColor.type;\n    newOrder.schemeColorTitle = form.schemeColor.title;\n    newOrder.height = form.height;\n    newOrder.width = form.width;\n    newOrder.sfrido = form.sfrido;\n\n    setOrder({ ...order, ...newOrder });\n  };\n\n  const pageVisible =\n    currentPage === 0\n      ? \"list\"\n      : currentPage === 1\n      ? \"configuration\"\n      : currentPage === 2\n      ? \"visualization\"\n      : \"order\";\n\n  return (\n    <div className=\"App\">\n      <section className=\"container\">\n        <div id=\"ceramicax-creator\" className=\"container\">\n          {currentPage !== 3 && (\n            <div id=\"title\" style={{ marginLeft: currentPage === 1 ? 25 : 0 }}>\n              <h1>Microtiles.</h1>\n              <span>\n                Design\n                {order.scheme === \"trapezi\"\n                  ? \" Giampaolo Benedini\"\n                  : \" Roberto Cicchinè\"}\n              </span>\n            </div>\n          )}\n          <SchemesList\n            style={{ marginBottom: 50 }}\n            schemeClicked={schemeClicked}\n            className={classNames(\"page-section\", {\n              visible: pageVisible === \"list\"\n            })}\n          />\n          <SchemeConfiguration\n            order={order}\n            schemeSelected={schemeSelected}\n            changePage={changePage}\n            onChangeOrder={onChangeOrder}\n            className={classNames(\"page-section\", {\n              visible: pageVisible === \"configuration\"\n            })}\n            page={pageVisible}\n          />\n          <SchemeVisualization\n            order={order}\n            setOrder={setOrder}\n            changePage={changePage}\n            setOrderImage={setOrderImage}\n            className={classNames(\"page-section\", {\n              visible: pageVisible === \"visualization\"\n            })}\n          />\n          <SchemeOrder\n            orderImage={orderImage}\n            order={order}\n            changePage={changePage}\n            className={classNames(\"page-section\", {\n              visible: pageVisible === \"order\"\n            })}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}